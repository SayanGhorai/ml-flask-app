name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Cache pip dependencies to speed up builds
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Set up Python
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # Install dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Run tests
      - name: Run tests
        run: pytest test_app.py --junitxml=test-results.xml
        continue-on-error: true

      # Upload test results if failed
      - name: Upload Test Results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.xml

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Build Docker image
      - name: Build Docker image
        run: docker build -t sayanghorai321/ml-flask-app:latest .

      # Push Docker image to Docker Hub
      - name: Push Docker image
        run: docker push sayanghorai321/ml-flask-app:latest
